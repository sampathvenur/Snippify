{
    "title": "Deep Partial Type",
    "description": "Converts all properties of a type, including nested objects, into optional.",
    "author": "sampathvenur",
    "code": "type DeepPartial<T> = {\n    [K in keyof T]?: T[K] extends object ? DeepPartial<T[K]> : T[K];\n};\n\n\n// Usage:\ntype A = {\n    name: string;\n    details: {\n        age: number;\n        address: { city: string; zip: string };\n    };\n};\n\ntype PartialA = DeepPartial<A>;\n/*\nType PartialA:\n{\n  name?: string;\n  details?: {\n    age?: number;\n    address?: { city?: string; zip?: string };\n  };\n}\n*/"
}